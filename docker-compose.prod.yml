version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: screenshot_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: screenshot_api
    volumes:
      - mongodb_data_prod:/data/db
      - ./mongodb/mongod.conf:/etc/mongod.conf
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: ["--config", "/etc/mongod.conf"]
    networks:
      - screenshot_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: screenshot_backend_prod
    restart: always
    environment:
      - MONGO_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/screenshot_api?authSource=admin
      - DB_NAME=screenshot_api
      - CORS_ORIGINS=${FRONTEND_URL}
      - PLAYWRIGHT_BROWSERS_PATH=/pw-browsers
      - MAX_WORKERS=4
      - LOG_LEVEL=info
    expose:
      - "8001"
    depends_on:
      - mongodb
    volumes:
      - ./screenshots:/app/screenshots
      - playwright_browsers_prod:/pw-browsers
      - ./logs:/app/logs
    networks:
      - screenshot_network_prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: screenshot_frontend_prod
    restart: always
    environment:
      - REACT_APP_BACKEND_URL=${BACKEND_URL}
      - NODE_ENV=production
    expose:
      - "80"
    depends_on:
      - backend
    networks:
      - screenshot_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: screenshot_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - screenshot_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: screenshot_redis_prod
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    networks:
      - screenshot_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongodb_data_prod:
    driver: local
  playwright_browsers_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  screenshot_network_prod:
    driver: bridge